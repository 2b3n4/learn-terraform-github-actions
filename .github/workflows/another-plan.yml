name: "Another Format, Validate, Plan Check"

on:
  pull_request:
    branches: [main]

env:
  TF_CLOUD_ORGANIZATION: "b3nsh-org"
  TF_WORKSPACE: api-driven
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  CONFIG_DIRECTORY: "./"

jobs:
  terraform:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.4
          cli_config_credentials_hostname: 'app.terraform.io'
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: true

      - name: Terraform Format
        id: format
        run: |
          terraform fmt -check --recursive
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: |
          terraform validate -no-color
          echo "::set-output name=stdout::$(terraform validate -no-color)"
        continue-on-error: true

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        id: plan
        run: |
          terraform plan -no-color -input=false
        continue-on-error: true

      - name: Truncate Terraform Plan Result
        run: |
          plan_log="tfplan_log_$(date -u +%Y%m%d).log"
          echo "${{ steps.plan.outputs.stdout }}" > "$plan_log"
          echo "EOF" >> "$plan_log"
          length=$(echo "$plan_log" | wc -c)

          if [[ $length -gt 100000 ]]; then
            tail -c 65000 "$plan_log" > truncated_plan.log
            echo "Truncated Plan result: "
            cat truncated_plan.log
          else
            cat "$plan_log"
          fi

      - name: Update Pull Request
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const fs = require('fs');
            const currentDate = new Date().toISOString().slice(0, 10).replace(/-/g, '');
            const planLogFileName = `tfplan_log_${currentDate}.log`;

            // Read the truncated plan output
            const planSummary = fs.readFileSync(planLogFileName, 'utf8');

            // Prepare the comment body
            const output = `
            ### [api-driven]
            #### Terraform Format and Style üñå\`${{ steps.format.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Format</summary>

            \`\`\`n
            ${process.env.FORMAT}
            \`\`\`

            </details>

            <details><summary>Show Plan</summary>

            \`\`\`n
            ${planSummary}
            \`\`\`

            </details>
            `;

            // Create a comment on the pull request
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
